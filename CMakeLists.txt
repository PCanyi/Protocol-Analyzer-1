cmake_minimum_required(VERSION 3.8)
project(protocol_analyzer)

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/)
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib/)
set(CMAKE_INCLUDE_PATH /usr/include/)
set(CMAKE_LIBRARY_PATH /usr/lib/)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")

set(USEFUL_WARNINGS "-Wno-deprecated-declarations -Wno-unused-macros -Wno-unused-parameter -Wno-unused-variable -Wno-padded")
set(WARNINGS "-Wno-variadic-macros -Wno-c++98-compat-pedantic -Wno-c++98-compat -Wno-exit-time-destructors -Wno-global-constructors -Wno-documentation -Wno-zero-as-null-pointer-constant")
set(ADDITIONAL_FLAGS   "-fsanitize=address  -fsanitize=leak  -fsanitize=undefined  -Weverything")
#set(ADDITIONAL_FLAGS   "-fsanitize=thread  -fsanitize=undefined  -Weverything")
#set(ADDITIONAL_FLAGS   "-fsanitize=memory  -fno-omit-frame-pointer  -Weverything")

set(CMAKE_CXX_FLAGS_DEBUG     "-g -O0 -DDEBUG -DFULLLOG  ${ADDITIONAL_FLAGS} ${WARNINGS} ${USEFUL_WARNINGS}")
set(CMAKE_CXX_FLAGS_RELEASE   "-O3 -DRELEASE -DFULLLOG   ${WARNINGS}")


set(TASK_LIB         include/analyzer/Task.hpp         src/Task.cpp src/TaskManager.cpp)
set(LOGGING_LIB      include/analyzer/Log.hpp          src/Log.cpp)
set(COMMON_LIB       include/analyzer/Common.hpp       src/Common.cpp)
set(PROTOCOL_LIB     include/analyzer/Protocol.hpp include/analyzer/Http.hpp   src/Protocol.cpp src/Http.cpp)
set(DIAGNOSTIC_LIB   include/analyzer/Timer.hpp        src/Timer.cpp)
set(UTILITIES_LIB    include/analyzer/Utilities.hpp    src/Utilities.cpp)
set(SOCKET_LIB       include/analyzer/Socket.hpp       src/Socket.cpp src/SocketSSL.cpp)

add_library(Task         ${TASK_LIB})
add_library(Common       ${COMMON_LIB})
add_library(Logging      ${LOGGING_LIB})
add_library(Diagnostic   ${DIAGNOSTIC_LIB})
add_library(Socket       ${SOCKET_LIB})
add_library(Protocol     ${PROTOCOL_LIB})
add_library(Utilities    ${UTILITIES_LIB})

target_link_libraries(Logging     Common)
target_link_libraries(Protocol    Logging Common)
target_link_libraries(Socket      ssl crypto Logging Common)
target_link_libraries(Task        pthread Socket Protocol Logging)
target_link_libraries(Utilities   Socket Protocol)


set(SSL_TEST                 test/test_ssl.cpp)
set(SOCKET_TEST              test/test_socket.cpp)
set(COMMON_TEST              test/test_common.cpp)
set(TIMING_TEST              test/test_timing.cpp)
#set(MANAGER_TEST             test/test_manager.cpp)
set(ANYTHING_TEST            test/test_anything.cpp)
set(URI_PARSER_TEST          test/test_uri_parser.cpp)
set(HTTP2_NEGOTIATION_TEST   test/test_http2_negotiation.cpp)

add_executable(test_ssl                 ${SSL_TEST})
add_executable(test_socket              ${SOCKET_TEST})
add_executable(test_common              ${COMMON_TEST})
add_executable(test_timing              ${TIMING_TEST})
#add_executable(test_manager             ${MANAGER_TEST})
add_executable(test_anything            ${ANYTHING_TEST})
add_executable(test_uri_parser          ${URI_PARSER_TEST})
add_executable(test_http2_negotiation   ${HTTP2_NEGOTIATION_TEST})

target_link_libraries(test_socket              Socket)
target_link_libraries(test_common              Common)
target_link_libraries(test_timing              Diagnostic)
#target_link_libraries(test_manager             Task)
target_link_libraries(test_anything            Common)
target_link_libraries(test_uri_parser          Protocol)
target_link_libraries(test_ssl                 Utilities)
target_link_libraries(test_http2_negotiation   Utilities)