dist: trusty
sudo: required
language: cpp


branches:
  only:
    - master


env:
  global:
    # COVERITY_SCAN_TOKEN
    # ** specific to your project **
    - secure: ""


matrix:
  include:    
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=g++-7 BUILD_TYPE=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=g++-7 BUILD_TYPE=Debug

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env: COMPILER=clang++-5.0 BUILD_TYPE=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env: COMPILER=clang++-5.0 BUILD_TYPE=Debug
      
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env: COMPILER=clang++-6.0 BUILD_TYPE=Release

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
        coverity_scan:
          project:
            name: "Vitaliy-Grigoriev/Protocol-Analyzer"
            description: "Fuzz testing framework for network protocols."
            version: 0.0.8
          notification_email: Vit.link420@gmail.com
          build_command_prepend: "cov-configure --comptype clangcxx --compiler clang++-6.0 && cmake ."
          build_command: "make -j4"
          branch_pattern: coverity_scan
      env: COMPILER=clang++-6.0 BUILD_TYPE=Debug


before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get -qq update


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/DEPS"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.tar.gz"
    mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  - sudo apt-get install -qq libssl-dev
  - sudo apt-get install -qq g++-7
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90


script:
  - if [[ "${COVERITY_SCAN_BRANCH}" == 1 ]];
      then
        echo "Don't build on coverty_scan branch.";
        exit 0;
    fi

  - cd ${TRAVIS_BUILD_DIR}
  - pwd
  - uname -a
  - cmake --version
  - ${COMPILER} --version
  - bash build_travis.sh


notifications:
  email:
    on_failure: always
    on_success: never
